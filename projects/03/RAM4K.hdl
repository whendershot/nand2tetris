// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(
        in = load,
        sel = address[9..11], 
        a = address0, 
        b = address1,
        c = address2,
        d = address3,
        e = address4,
        f = address5,
        g = address6,
        h = address7
    );
    
    RAM512(in = in, address = address[0..8], load = address0, out = out0);
    RAM512(in = in, address = address[0..8], load = address1, out = out1);
    RAM512(in = in, address = address[0..8], load = address2, out = out2);
    RAM512(in = in, address = address[0..8], load = address3, out = out3);
    RAM512(in = in, address = address[0..8], load = address4, out = out4);
    RAM512(in = in, address = address[0..8], load = address5, out = out5);
    RAM512(in = in, address = address[0..8], load = address6, out = out6);
    RAM512(in = in, address = address[0..8], load = address7, out = out7);
    
    Mux8Way16(
        a = out0,
        b = out1,
        c = out2,
        d = out3,
        e = out4,
        f = out5,
        g = out6,
        h = out7,
        sel = address[9..11],
        out = out
    );
}